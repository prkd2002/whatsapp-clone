# Déclaration du bloc "events" requis même s’il est vide (obligatoire dans la config Nginx)
events {}

# Bloc principal de configuration HTTP
http {

  # Déclaration d’un serveur web
  server {
    # Le serveur écoute sur le port 80 (HTTP standard)
    listen 80;

    # Bloc pour gérer la racine ("/") du site
    location / {
      # Chemin où sont stockés les fichiers statiques (HTML, JS, CSS, images, etc.)
      root /usr/share/nginx/html;

      # Fichier par défaut à servir s’il n’y a pas de nom de fichier précisé
      index index.html;

      # Essaie de servir le fichier demandé ($uri), ou un dossier ($uri/), ou retombe sur index.html
      # Ceci est utile pour les SPA (Single Page Applications) comme Angular/React/Vue
      try_files $uri $uri/ /index.html;
    }

    # Bloc pour gérer les fichiers JS, SCSS (probablement une faute de frappe ici), et CSS
    location ~ \.(js|scss|css)$ {
      # Réutilisation de la racine des fichiers statiques
      root /usr/share/nginx/html;

      # Inclusion du fichier mime.types pour que Nginx serve les fichiers avec le bon Content-Type
      # ⚠️ Le nom exact du fichier est normalement /etc/nginx/mime.types (au pluriel)
      include /etc/nginx/mime.types;
    }

    # Bloc qui attrape toutes les autres routes (par exemple : /user/profile, /dashboard/settings, etc.)
    # Cela permet de gérer les rafraîchissements de page dans une SPA
    location ~ ^/.+$ {
      # Même racine
      root /usr/share/nginx/html;

      # Fichier index par défaut
      index index.html;

      # Même logique : on tente de servir le fichier demandé, sinon index.html
      try_files $uri $uri/ /index.html;
    }

  }

}
